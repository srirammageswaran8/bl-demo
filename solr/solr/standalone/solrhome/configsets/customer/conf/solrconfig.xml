<?xml version="1.0" encoding="UTF-8" ?>
<config>
    <luceneMatchVersion>7.3.1</luceneMatchVersion>
    <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.StandardDirectoryFactory}" />
    
    <!-- The default high-performance update handler -->
    <updateHandler class="solr.DirectUpdateHandler2">

        <!-- Enables a transaction log, used for real-time get, durability, and
             and solr cloud replica recovery.  The log can grow as big as
             uncommitted changes to the index, so use of a hard autoCommit
             is recommended (see below).
             "dir" - the target directory for transaction logs, defaults to the
                solr data directory.  --> 
        <updateLog>
            <str name="dir">${solr.ulog.dir:}</str>
        </updateLog>
 
        <!-- AutoCommit

             Perform a hard commit automatically under certain conditions.
             Instead of enabling autoCommit, consider using "commitWithin"
             when adding documents. 

             http://wiki.apache.org/solr/UpdateXmlMessages

             maxDocs - Maximum number of documents to add since the last
                       commit before automatically triggering a new commit.

             maxTime - Maximum amount of time in ms that is allowed to pass
                       since a document was added before automatically
                       triggering a new commit. 
             openSearcher - if false, the commit causes recent index changes
             to be flushed to stable storage, but does not cause a new
             searcher to be opened to make those changes visible.

             If the updateLog is enabled, then it's highly recommended to
             have some sort of hard autoCommit to limit the log size.
          -->
        <autoCommit>
            <maxTime>${solr.autoCommit.maxTime:15000}</maxTime> 
            <openSearcher>false</openSearcher> 
        </autoCommit>

        <!-- softAutoCommit is like autoCommit except it causes a
             'soft' commit which only ensures that changes are visible
             but does not ensure that data is synced to disk.  This is
             faster and more near-realtime friendly than a hard commit.
             
             Value of -1 means that it is disabled. Broadleaf can be configured to do
             soft commits via the API.  We turn it off so that the API issues soft commits.
             Turn this on if you are going to turn off commits entirely in Broadleaf.
             
             For NRT, set this to approximately 1000 (ms) and set the autoCommit maxTime to 
             15000 ms.  See the Solr docs for more info.
        -->
        <autoSoftCommit>
            <maxTime>${solr.autoSoftCommit.maxTime:1000}</maxTime> 
        </autoSoftCommit>

        <!-- Update Related Event Listeners
         
             Various IndexWriter related events can trigger Listeners to
             take actions.

             postCommit - fired after every commit or optimize command
             postOptimize - fired after every optimize command
        -->
        <!-- The RunExecutableListener executes an external command from a
             hook such as postCommit or postOptimize.
         
             exe - the name of the executable to run
             dir - dir to use as the current working directory. (default=".")
             wait - the calling thread waits until the executable returns. 
                (default="true")
             args - the arguments to pass to the program.  (default is none)
             env - environment variables to set.  (default is none)
        -->
        <!-- This example shows how RunExecutableListener could be used
             with the script based replication...
             http://wiki.apache.org/solr/CollectionDistribution
        -->
        <!--
            <listener event="postCommit" class="solr.RunExecutableListener">
                <str name="exe">solr/bin/snapshooter</str>
                <str name="dir">.</str>
                <bool name="wait">true</bool>
                <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
                <arr name="env"> <str>MYVAR=val1</str> </arr>
            </listener>
        -->

    </updateHandler>

    <query>
        <maxBooleanClauses>1024</maxBooleanClauses>

        <filterCache class="solr.FastLRUCache" size="512" initialSize="512" autowarmCount="0" />
        <queryResultCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
        <documentCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
        <cache name="perSegFilter" class="solr.search.LRUCache" size="10" initialSize="0" autowarmCount="10" 
                regenerator="solr.NoOpRegenerator" />

        <enableLazyFieldLoading>true</enableLazyFieldLoading>

        <queryResultWindowSize>20</queryResultWindowSize>
        <queryResultMaxDocsCached>200</queryResultMaxDocsCached>

        <listener event="newSearcher" class="solr.QuerySenderListener" />
        <listener event="firstSearcher" class="solr.QuerySenderListener">
            <arr name="queries">
                <lst>
                    <str name="q">static firstSearcher warming in solrconfig.xml</str>
                </lst>
            </arr>
        </listener>

        <useColdSearcher>false</useColdSearcher>
        <maxWarmingSearchers>2</maxWarmingSearchers>
    </query>

    <requestDispatcher handleSelect="false">
        <requestParsers enableRemoteStreaming="true" multipartUploadLimitInKB="2048000" formdataUploadLimitInKB="2048"
                    addHttpRequestToContext="false"/>
        <httpCaching never304="true" />
    </requestDispatcher>

    <requestHandler name="/select" class="solr.SearchHandler">
        <lst name="defaults">
            <str name="echoParams">explicit</str>
            <int name="rows">10</int>
            <str name="df">name_t</str>
        </lst>
    </requestHandler>

    <queryResponseWriter name="json" class="solr.JSONResponseWriter">
        <str name="content-type">text/plain; charset=UTF-8</str>
    </queryResponseWriter>

</config>